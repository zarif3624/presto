{"ast":null,"code":"var _jsxFileName = \"/Users/zarif.choudhury@ibm.com/Documents/c4c_disaster_proj/src/components/Table.js\";\nimport React from 'react';\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 44\n    }\n  })))\n};\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Hospital',\n      field: 'name',\n      cellStyle: {\n        backgroundColor: '#FFF',\n        color: '#000'\n      },\n      headerStyle: {\n        backgroundColor: '#FFF'\n      }\n    }, {\n      title: 'Doctors',\n      field: 'doctors',\n      type: 'numeric'\n    }, {\n      title: 'Nurses',\n      field: 'nurses',\n      type: 'numeric'\n    }, {\n      title: 'Gloves',\n      field: 'gloves',\n      type: 'numeric'\n    }, {\n      title: 'Masks',\n      field: 'masks',\n      type: 'numeric'\n    }, {\n      title: 'Ventilators',\n      field: 'vent',\n      type: 'numeric'\n    }],\n    data: [{\n      name: 'Bellevue Hospital Center',\n      doctors: 1564,\n      nurses: 1132,\n      gloves: 70000,\n      masks: 55000,\n      vent: 376\n    }, {\n      name: 'Lenox Hill Hospital',\n      doctors: 685,\n      nurses: 580,\n      gloves: 80000,\n      masks: 73000,\n      vent: 231\n    }, {\n      name: 'Sloan Kettering Cancer Center',\n      doctors: 1312,\n      nurses: 1092,\n      gloves: 53000,\n      masks: 49130,\n      vent: 435\n    }, {\n      name: 'NYU Langone Hospital',\n      doctors: 986,\n      nurses: 578,\n      gloves: 12000,\n      masks: 120000,\n      vent: 378\n    }, {\n      name: 'Mount Sinai Hospital',\n      doctors: 1932,\n      nurses: 786,\n      gloves: 9800,\n      masks: 14000,\n      vent: 111\n    }, {\n      name: 'NewYork-Presbyterian',\n      doctors: 1123,\n      nurses: 800,\n      gloves: 40000,\n      masks: 35000,\n      vent: 124\n    }, {\n      name: 'Rockefeller Institute',\n      doctors: 754,\n      nurses: 543,\n      gloves: 30000,\n      masks: 45000,\n      vent: 230\n    }, {\n      name: 'Harlem Hospital Center',\n      doctors: 542,\n      nurses: 403,\n      gloves: 19000,\n      masks: 23000,\n      vent: 129\n    }]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Hospitals and Clinics in Manhattan\",\n    icons: tableIcons,\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/zarif.choudhury@ibm.com/Documents/c4c_disaster_proj/src/components/Table.js"],"names":["React","forwardRef","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","MaterialTableDemo","state","setState","useState","columns","title","field","cellStyle","backgroundColor","color","headerStyle","type","data","name","doctors","nurses","gloves","masks","vent","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Hospital', field: 'name',\n      cellStyle: {\n        backgroundColor: '#FFF',\n        color: '#000'\n      },\n      headerStyle: {\n        backgroundColor: '#FFF',\n      }\n     },\n      { title: 'Doctors', field: 'doctors', type: 'numeric' },\n      { title: 'Nurses', field: 'nurses', type: 'numeric' },\n      { title: 'Gloves', field: 'gloves', type: 'numeric' },\n      { title: 'Masks', field: 'masks', type: 'numeric' },\n      { title: 'Ventilators', field: 'vent', type: 'numeric' },\n\n    ],\n    data: [\n      { name: 'Bellevue Hospital Center', doctors: 1564, nurses: 1132, gloves: 70000, masks: 55000, vent: 376 },\n      { name: 'Lenox Hill Hospital', doctors: 685, nurses: 580, gloves: 80000, masks: 73000, vent: 231 },\n      { name: 'Sloan Kettering Cancer Center', doctors: 1312, nurses: 1092, gloves: 53000, masks: 49130, vent: 435 },\n      { name: 'NYU Langone Hospital', doctors: 986, nurses: 578, gloves: 12000, masks: 120000, vent: 378 },\n      { name: 'Mount Sinai Hospital', doctors: 1932, nurses: 786, gloves: 9800, masks: 14000, vent: 111 },\n      { name: 'NewYork-Presbyterian', doctors: 1123, nurses: 800, gloves: 40000, masks: 35000, vent: 124 },\n      { name: 'Rockefeller Institute', doctors: 754, nurses: 543, gloves: 30000, masks: 45000, vent: 230 },\n      { name: 'Harlem Hospital Center', doctors: 542, nurses: 403, gloves: 19000, masks: 23000, vent: 129 },\n    ],\n  });\n\n  return (\n    <MaterialTable\n      title=\"Hospitals and Clinics in Manhattan\"\n      icons={tableIcons}\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}