{"ast":null,"code":"var _jsxFileName = \"/Users/zarif.choudhury@ibm.com/Documents/c4c_disaster_proj/src/components/SettingsGeneral.js\";\nimport React, { useState } from \"react\";\nimport FormAlert from \"./FormAlert\";\nimport Form from \"react-bootstrap/Form\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\nimport { useUser, updateUser } from \"./../util/db.js\";\n\nfunction SettingsGeneral(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null); // Fetch user from database\n\n  const uid = auth.user && auth.user.uid;\n  const {\n    data: user,\n    status\n  } = useUser(uid);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    // Show pending indicator\n    setPending(true);\n    return auth.updateEmail(data.email).then(() => {\n      // Update user in database\n      return updateUser(user.uid, data).then(() => {\n        // Show success alert message\n        setFormAlert({\n          type: \"success\",\n          message: \"Your profile has been updated\"\n        });\n      });\n    }).catch(error => {\n      if (error.code === \"auth/requires-recent-login\") {\n        // Remove existing alert message\n        setFormAlert(null); // Show re-authentication modal and\n        // then re-call onSubmit() when done.\n\n        props.onRequireReauth(() => {\n          onSubmit({\n            email: data.email\n          });\n        });\n      } else {\n        // Show error alert message\n        setFormAlert({\n          type: \"error\",\n          message: error.message\n        });\n      }\n    }).finally(() => {\n      // Hide pending indicator\n      setPending(false);\n    });\n  }; // Show loading indicator until\n  // database query completes.\n\n\n  if (status === \"loading\") {\n    return \"Loading ...\";\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, formAlert && /*#__PURE__*/React.createElement(FormAlert, {\n    type: formAlert.type,\n    message: formAlert.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    name: \"name\",\n    type: \"text\",\n    label: \"Name\",\n    defaultValue: user.name,\n    placeholder: \"Name\",\n    error: errors.name,\n    inputRef: register({\n      required: \"Please enter your name\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email Address\",\n    defaultValue: user.email,\n    placeholder: \"Email\",\n    error: errors.email,\n    inputRef: register({\n      required: \"Please enter your email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Save\"), pending && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": true,\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Sending...\")))));\n}\n\nexport default SettingsGeneral;","map":{"version":3,"sources":["/Users/zarif.choudhury@ibm.com/Documents/c4c_disaster_proj/src/components/SettingsGeneral.js"],"names":["React","useState","FormAlert","Form","FormField","Button","Spinner","useAuth","useForm","useUser","updateUser","SettingsGeneral","props","auth","pending","setPending","formAlert","setFormAlert","uid","user","data","status","register","handleSubmit","errors","onSubmit","updateEmail","email","then","type","message","catch","error","code","onRequireReauth","finally","name","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormAlert from \"./FormAlert\";\nimport Form from \"react-bootstrap/Form\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\nimport { useUser, updateUser } from \"./../util/db.js\";\n\nfunction SettingsGeneral(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n\n  // Fetch user from database\n  const uid = auth.user && auth.user.uid;\n  const { data: user, status } = useUser(uid);\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    // Show pending indicator\n    setPending(true);\n\n    return auth\n      .updateEmail(data.email)\n      .then(() => {\n        // Update user in database\n        return updateUser(user.uid, data).then(() => {\n          // Show success alert message\n          setFormAlert({\n            type: \"success\",\n            message: \"Your profile has been updated\",\n          });\n        });\n      })\n      .catch((error) => {\n        if (error.code === \"auth/requires-recent-login\") {\n          // Remove existing alert message\n          setFormAlert(null);\n\n          // Show re-authentication modal and\n          // then re-call onSubmit() when done.\n          props.onRequireReauth(() => {\n            onSubmit({ email: data.email });\n          });\n        } else {\n          // Show error alert message\n          setFormAlert({\n            type: \"error\",\n            message: error.message,\n          });\n        }\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  // Show loading indicator until\n  // database query completes.\n  if (status === \"loading\") {\n    return \"Loading ...\";\n  }\n\n  return (\n    <>\n      {formAlert && (\n        <FormAlert\n          type={formAlert.type}\n          message={formAlert.message}\n        ></FormAlert>\n      )}\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId=\"formName\">\n          <FormField\n            name=\"name\"\n            type=\"text\"\n            label=\"Name\"\n            defaultValue={user.name}\n            placeholder=\"Name\"\n            error={errors.name}\n            inputRef={register({\n              required: \"Please enter your name\",\n            })}\n          ></FormField>\n        </Form.Group>\n        <Form.Group controlId=\"formEmail\">\n          <FormField\n            name=\"email\"\n            type=\"email\"\n            label=\"Email Address\"\n            defaultValue={user.email}\n            placeholder=\"Email\"\n            error={errors.email}\n            inputRef={register({\n              required: \"Please enter your email\",\n            })}\n          ></FormField>\n        </Form.Group>\n        <Button type=\"submit\" disabled={pending}>\n          <span>Save</span>\n\n          {pending && (\n            <Spinner\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden={true}\n              className=\"ml-2\"\n            >\n              <span className=\"sr-only\">Sending...</span>\n            </Spinner>\n          )}\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default SettingsGeneral;\n"]},"metadata":{},"sourceType":"module"}