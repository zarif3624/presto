{"ast":null,"code":"var _jsxFileName = \"/Users/zarif.choudhury@ibm.com/Documents/c4c_disaster_proj/src/components/ReauthModal.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport FormAlert from \"./FormAlert\";\nimport Form from \"react-bootstrap/Form\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport AuthSocial from \"./AuthSocial\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ReauthModal(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const {\n      pass\n    } = data;\n    setPending(true);\n    auth.signin(auth.user.email, pass).then(() => props.onComplete()).catch(error => {\n      // Hide pending indicator\n      setPending(false); // Show error alert message\n\n      setFormAlert({\n        type: \"error\",\n        message: error.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: true,\n    onHide: props.onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Please sign in again to complete this action\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, formAlert && /*#__PURE__*/React.createElement(FormAlert, {\n    type: formAlert.type,\n    message: formAlert.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), props.provider === \"password\" && /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formConfirmPass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    size: props.inputSize,\n    name: \"pass\",\n    type: \"password\",\n    placeholder: \"Password\",\n    error: errors.pass,\n    inputRef: register({\n      required: \"Please enter your password\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    block: true,\n    type: \"submit\",\n    disabled: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Submit\"), pending && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": true,\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Loading...\")))), props.provider !== \"password\" && /*#__PURE__*/React.createElement(AuthSocial, {\n    type: \"signin\",\n    buttonText: \"Sign in\",\n    providers: [props.provider],\n    showLastUsed: false,\n    onAuth: props.onComplete,\n    onError: message => {\n      setFormAlert({\n        type: \"error\",\n        message: message\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default ReauthModal;","map":{"version":3,"sources":["/Users/zarif.choudhury@ibm.com/Documents/c4c_disaster_proj/src/components/ReauthModal.js"],"names":["React","useState","Modal","FormAlert","Form","FormField","Button","Spinner","AuthSocial","useAuth","useForm","ReauthModal","props","auth","pending","setPending","formAlert","setFormAlert","register","handleSubmit","errors","onSubmit","data","pass","signin","user","email","then","onComplete","catch","error","type","message","onCancel","provider","inputSize","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport FormAlert from \"./FormAlert\";\nimport Form from \"react-bootstrap/Form\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport AuthSocial from \"./AuthSocial\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ReauthModal(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    const { pass } = data;\n    setPending(true);\n\n    auth\n      .signin(auth.user.email, pass)\n      .then(() => props.onComplete())\n      .catch((error) => {\n        // Hide pending indicator\n        setPending(false);\n        // Show error alert message\n        setFormAlert({\n          type: \"error\",\n          message: error.message,\n        });\n      });\n  };\n\n  return (\n    <Modal show={true} onHide={props.onCancel}>\n      <Modal.Header closeButton={true}>\n        Please sign in again to complete this action\n      </Modal.Header>\n      <Modal.Body>\n        {formAlert && (\n          <FormAlert\n            type={formAlert.type}\n            message={formAlert.message}\n          ></FormAlert>\n        )}\n\n        {props.provider === \"password\" && (\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Group controlId=\"formConfirmPass\">\n              <FormField\n                size={props.inputSize}\n                name=\"pass\"\n                type=\"password\"\n                placeholder=\"Password\"\n                error={errors.pass}\n                inputRef={register({\n                  required: \"Please enter your password\",\n                })}\n              ></FormField>\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              block={true}\n              type=\"submit\"\n              disabled={pending}\n            >\n              <span>Submit</span>\n\n              {pending && (\n                <Spinner\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden={true}\n                  className=\"ml-2\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              )}\n            </Button>\n          </Form>\n        )}\n\n        {props.provider !== \"password\" && (\n          <AuthSocial\n            type=\"signin\"\n            buttonText=\"Sign in\"\n            providers={[props.provider]}\n            showLastUsed={false}\n            onAuth={props.onComplete}\n            onError={(message) => {\n              setFormAlert({\n                type: \"error\",\n                message: message,\n              });\n            }}\n          ></AuthSocial>\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ReauthModal;\n"]},"metadata":{},"sourceType":"module"}